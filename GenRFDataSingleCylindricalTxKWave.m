function GenRFDataSingleCylindricalTxKWave(siminfo_filename, tx_idx)

% Load Functions
addpath(genpath('../k-Wave'));
addpath(genpath(pwd));

% Load Simulation Information Created by GenKWaveSimInfo.m
load(siminfo_filename);

% Select the simulation type 
%   1. C++ Simulation from Matlab
%   2. CUDA Simulation from Matlab 
%   3. MATLAB simulation 
SIMULATION_TYPE = 3;

% Indices to Reorder Sensor Data 
[~, I] = sort(ind,2);

% Fourier Transform and Inverse
[T, F] = meshgrid(time, freq);
FT = exp(-1i*2*pi*F.*T)*mean(diff(time));
IFT = exp(1i*2*pi*F'.*T')*mean(diff(freq));

% Loop Through All Elements
numElements = numRows*numElemPerRow;

% Place Transmit Signal on Array 
src = struct(); % ParFor Requires you to Explicitly Create A Struct
src.p_mask = zeros(Nzi, Nxi, Nyi);
src.p_mask(z_idx(tx_idx),x_idx(tx_idx),:) = 1; % Cylindrical Wave Transmission
src.p = tx_signal;
src.p_mode = 'dirichlet'; % Enforce pressure signal as boundary condition

% Run the Simulation for Transmit
switch SIMULATION_TYPE
    case 1
        % Run the C++ simulation
        sensor_data_unordered = ...
            kspaceFirstOrder3DC(kgrid, medium, src, sensor, input_args{:});
    case 2
        % Run the CUDA simulation
        sensor_data_unordered = ...
            kspaceFirstOrder3DG(kgrid, medium, src, sensor, input_args{:});
    case 3
        % Run the MATLAB simulation
        sensor_data_unordered = ...
            kspaceFirstOrder3D(kgrid, medium, src, sensor, input_args{:});
end 

% Reorder and Assemble Sensor Data 
sensor_data_unordered = reshape(sensor_data_unordered, ...
    numElemPerRow, numRows, numel(time));
sensor_data = zeros(numElemPerRow, numRows, numel(time), 'single');
for rx_row = 1:numRows
    sensor_data(I(rx_row,:),rx_row,:) = sensor_data_unordered(:,rx_row,:);
end
rf_data = permute(sensor_data,[3,1,2]);
rf_data_FT = pagemtimes(FT, rf_data);

% Save Full Synthetic Aperture Data Generated by k-Wave
filename = ['sim_data/rf_data_tx_', num2str(tx_idx), '.mat'];
save(filename, 'rf_data_FT'); % File Has Been Saved
disp(['Data for Cylinderical Wave TX ', num2str(tx_idx), ' has been saved to file']);

end